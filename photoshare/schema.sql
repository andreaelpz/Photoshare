CREATE DATABASE IF NOT EXISTS photoshare;
USE photoshare;
-- DROP TABLE IF EXISTS Writes CASCADE;
-- DROP TABLE IF EXISTS Has CASCADE;
DROP TABLE IF EXISTS Contain CASCADE;
DROP TABLE IF EXISTS Has_A CASCADE;
DROP TABLE IF EXISTS On_A CASCADE;
DROP TABLE IF EXISTS Has_A2 CASCADE;
DROP TABLE IF EXISTS Tags CASCADE;
DROP TABLE IF EXISTS Likes CASCADE;
DROP TABLE IF EXISTS Comments CASCADE;
DROP TABLE IF EXISTS Photos CASCADE;
DROP TABLE IF EXISTS Albums CASCADE;
DROP TABLE IF EXISTS Friends CASCADE;
DROP TABLE IF EXISTS Users CASCADE;

CREATE TABLE Users (
    UID int4  AUTO_INCREMENT,
    first_name varchar(255),
    last_name varchar(255),
    email varchar(255) UNIQUE,
    DOB DATE,
	hometown VARCHAR(30), 
	gender VARCHAR(20), 
    password varchar(255),
    data_1 longblob,
  CONSTRAINT UID PRIMARY KEY (UID)
);

CREATE TABLE Albums
(
AID int4 AUTO_INCREMENT,
UID int4,
albumname varchar(255), 
DOC DATE,
PRIMARY KEY (AID),
FOREIGN KEY (UID) REFERENCES Users(UID)
);

CREATE TABLE Photos
(
  UPHID int4 AUTO_INCREMENT,
  UID int4,
  AID int4,
  data_1 longblob ,
  caption VARCHAR(255),
  INDEX UPHIDindex (UID),
  CONSTRAINT UPHID PRIMARY KEY (UPHID),
  -- FOREIGN KEY (UID) REFERENCES Users(UID),
  FOREIGN KEY (AID) REFERENCES Albums(AID)
);


CREATE TABLE Friends
(
FID int4,
UID int4,
-- FOREIGN KEY (FID) REFERENCES Users(UID),
FOREIGN KEY (UID) REFERENCES Users(UID),
CHECK (FID <> UID) 
);

CREATE TABLE Comments
(
UCID int4 AUTO_INCREMENT,
texts VARCHAR(100), 
UID int4,
date_left date,
UPHID int4,
PRIMARY KEY (UCID),
FOREIGN KEY (UID) REFERENCES Users(UID),
FOREIGN KEY (UPHID) REFERENCES Photos(UPHID)
);

CREATE TABLE Tags
(
-- TID int4 AUTO_INCREMENT, 
UPHID INT NOT NULL,
word VARCHAR(20),
-- CONSTRAINT TID PRIMARY KEY (TID),
FOREIGN KEY (UPHID) REFERENCES Photos(UPHID)
);

CREATE TABLE Writes
(
UID int4,
UCID int4,
FOREIGN KEY (UID) REFERENCES Users(UID),
FOREIGN KEY (UCID) REFERENCES Comments(UCID)
);

CREATE TABLE Likes
(
  UPHID int4,
  UID int4,
  FOREIGN KEY (UPHID) REFERENCES Photos(UPHID),
  FOREIGN KEY (UID) REFERENCES Users(UID)
);

CREATE TABLE Has_A2
(
UPHID int4,
-- TID int4,
-- FOREIGN KEY (TID) REFERENCES Tags(TID),
FOREIGN KEY (UPHID) REFERENCES Photos(UPHID)
);

CREATE TABLE On_A
(
UCID int4,
UPHID int4,
FOREIGN KEY (UCID) REFERENCES Comments(UCID),
FOREIGN KEY (UPHID) REFERENCES Photos(UPHID)
);

CREATE TABLE Contain
(
UPHID int4,
AID int4,
FOREIGN KEY (UPHID) REFERENCES Photos(UPHID),
FOREIGN KEY (AID) REFERENCES Albums(AID)
);

-- CREATE TABLE Has_A
-- (
-- UID int4,
-- AID int4,
-- FOREIGN KEY (UID) REFERENCES Users(UID),
-- FOREIGN KEY (AID) REFERENCES Albums(AID)
-- );


-- CREATE TABLE Has
-- (
-- UID int4,
-- FID int4,
-- FOREIGN KEY (UID) REFERENCES Users(UID),
-- FOREIGN KEY (FID) REFERENCES Friends(FID)
-- );


